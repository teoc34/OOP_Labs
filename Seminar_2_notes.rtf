{\rtf1\ansi\ansicpg1252\cocoartf2758
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue;\f2\fnil\fcharset0 HelveticaNeue-Italic;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid1\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab560
\pard\pardeftab560\partightenfactor0

\f0\b\fs40 \cf0 Object Oriented Programming\
\pard\pardeftab560\sa40\partightenfactor0

\fs32 \cf0 \
Seminar 2\
\pard\pardeftab560\slleading20\partightenfactor0

\f1\b0\fs26 \cf0 Steak & Heap - stocarea informatiei RAM\
Steak - mai rapid\
Declar o informatie - salveaza in Heap\
use \'93new\'94 - alocare dinamica - salveaza in Steak\
new vs. malloc - malloc pentru C, new pentru C++\
functie pentru alocarea memoriei - calloc\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab560\slleading20\partightenfactor0

\f0\b \cf0 Functii de alocare si eliberare a memoriei\
\pard\pardeftab560\slleading20\partightenfactor0

\f2\i\b0 \cf0 malloc
\f1\i0 \
void *malloc(size_t size);\
\

\f2\i calloc
\f1\i0  - 4 octeti\
void *calloc(size_t nmemb, size_t size);\
\

\f2\i realloc
\f1\i0 \
void *realloc(void *ptr, size_t size);\
\

\f2\i free
\f1\i0 \
void free(void *ptr);\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 !!!steak - alocare statica\
daca nu alocam dinamic, pierdem datele\
\
declaram un char \
1 char -> 1 octet\
adresa unui char -> 4 octeti\
!!!adresele de memorie sunt salvate intr un intreg(4 sau 8 octeti)\
debug \
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls1\ilvl0
\fs24 \cf0 {\listtext	\uc0\u8259 	}
\fs26 insert breakpoint + start debugging - pentru a vedea locals\
\ls1\ilvl0
\fs24 {\listtext	\uc0\u8259 	}
\fs26 click+f10\
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 \
Adresa de memorie nu este aceeasi pentru toate calculatoarele - metoda de protectie cibernetica\
\
dimensiunea unui pointer = dimensiunea unui intreg\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 aplicatii dezvoltate de noi = 4 octeti}